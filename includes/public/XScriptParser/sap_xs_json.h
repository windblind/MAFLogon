// Generated by SAP AFX Compiler (Tue Mar 10 11:04:38 CET 2015)

#ifndef SAP_XS_JSON_H
#define SAP_XS_JSON_H

#include "sap_xs_runtime.h"

@class XS_JsonException;
@class XS_JsonToken;
@class XS_JsonBooleanValue;
@class XS_JsonNumberValue;
@class XS_JsonStringValue;
@class XS_JsonNullValue;
@class XS_JsonColonChar;
@class XS_JsonCommaChar;
@class XS_JsonBeginArray;
@class XS_JsonEndArray;
@class XS_JsonBeginObject;
@class XS_JsonEndObject;
@class XS_JsonEndStream;
@class XS_JsonTickValue;
@class XS_JsonTokenStream;
@class XS_JsonOutputStream;
@class XS_JsonOutputStream1;
@class XS_JsonContentFrame;
@class XS_JsonContentStack;
@class XS_JsonContentStream;
@class XS_JsonArray;
@class XS_JsonObject;
@class XS_JsonValue;
@class XS_JsonDeltaStream;
@class XS_JsonWriter;
@class XS_JsonReader;
@class XS_GeoJSON;

@interface XS_JsonException : NSException
{
    @protected NSString* message_;
}
/* public */ @property (readonly, strong) NSString* message;
/* private */ - (id) init;
/* public */ - (NSString*) message;
+ (XS_JsonException*) new;
/* private */ - (void) privateInit;
/* public */ + (XS_JsonException*) withMessage :(NSString*)param_message;
/* private */ + (XS_JsonException*) DC1 :(NSString*)p1;
@end

@interface XS_JsonToken : NSObject
{
    @protected xs_int type_;
}
/* public */ @property (readonly) xs_int type;
/* private */ - (id) init;
/* public */ + (XS_JsonToken*) new;
/* public */ - (xs_int) type;
/* public */ - (void) throwExpected :(NSString*)what;
@end

#define XS_JsonToken_NULL_VALUE 0
#define XS_JsonToken_BOOLEAN_VALUE 1
#define XS_JsonToken_NUMBER_VALUE 2
#define XS_JsonToken_STRING_VALUE 3
#define XS_JsonToken_COLON_CHAR 4
#define XS_JsonToken_COMMA_CHAR 5
#define XS_JsonToken_BEGIN_ARRAY 6
#define XS_JsonToken_END_ARRAY 7
#define XS_JsonToken_BEGIN_OBJECT 8
#define XS_JsonToken_END_OBJECT 9
#define XS_JsonToken_END_STREAM 10
#define XS_JsonToken_TICK_VALUE 11

@interface XS_JsonBooleanValue : XS_JsonToken
{
    @protected xs_boolean value_;
}
/* public */ @property (readonly) xs_int type;
/* public */ @property (readonly) xs_boolean value;
/* private */ - (id) init;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ - (xs_boolean) value;
/* internal */ + (XS_JsonBooleanValue*) TOKEN_TRUE;
/* internal */ + (XS_JsonBooleanValue*) TOKEN_FALSE;
+ (XS_JsonBooleanValue*) new;
/* private */ - (void) privateInit;
/* public */ + (XS_JsonBooleanValue*) of :(xs_boolean)param_value;
/* public */ - (NSString*) toString;
/* private */ + (XS_JsonBooleanValue*) DC1 :(xs_boolean)p1;
@end

@interface XS_JsonNumberValue : XS_JsonToken
{
    @protected NSString* value_;
}
/* public */ @property (readonly) xs_int type;
/* public */ @property (readonly, strong) NSString* value;
/* private */ - (id) init;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ - (NSString*) value;
/* internal */ + (XS_JsonNumberValue*) TOKEN_ZERO;
/* internal */ + (XS_JsonNumberValue*) TOKEN_ONE;
/* internal */ + (XS_JsonNumberValue*) TOKEN_TWO;
/* internal */ + (XS_JsonNumberValue*) TOKEN_THREE;
/* internal */ + (XS_JsonNumberValue*) TOKEN_FOUR;
/* internal */ + (XS_JsonNumberValue*) TOKEN_FIVE;
+ (XS_JsonNumberValue*) new;
/* private */ - (void) privateInit;
/* public */ + (XS_JsonNumberValue*) of :(NSString*)param_value;
/* public */ - (NSString*) toString;
/* private */ + (XS_JsonNumberValue*) DC1 :(NSString*)p1;
@end

@interface XS_JsonStringValue : XS_JsonToken
{
    @protected NSString* value_;
}
/* public */ @property (readonly) xs_int type;
/* public */ @property (readonly, strong) NSString* value;
/* private */ - (id) init;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ - (NSString*) value;
/* internal */ + (XS_JsonStringValue*) TOKEN_EMPTY;
+ (XS_JsonStringValue*) new;
/* private */ - (void) privateInit;
/* public */ + (XS_JsonStringValue*) of :(NSString*)param_value;
/* public */ - (NSString*) toString;
/* private */ + (XS_JsonStringValue*) DC1 :(NSString*)p1;
@end

/* internal */ @interface XS_JsonNullValue : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN_NULL;
+ (XS_JsonNullValue*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonColonChar : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN;
+ (XS_JsonColonChar*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonCommaChar : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN;
+ (XS_JsonCommaChar*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonBeginArray : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN;
+ (XS_JsonBeginArray*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonEndArray : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN;
+ (XS_JsonEndArray*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonBeginObject : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN;
+ (XS_JsonBeginObject*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonEndObject : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN;
+ (XS_JsonEndObject*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonEndStream : XS_JsonToken
/* public */ @property (readonly) xs_int type;
/* private */ + (void) initialize;
/* public */ - (xs_int) type;
/* public */ + (XS_JsonToken*) TOKEN;
+ (XS_JsonEndStream*) new;
/* private */ - (void) privateInit;
/* public */ - (NSString*) toString;
@end

/* internal */ @interface XS_JsonTickValue : XS_JsonToken
{
    @protected NSString* value_;
}
/* public */ @property (readonly) xs_int type;
/* public */ @property (readonly, strong) NSString* value;
/* private */ - (id) init;
/* public */ - (xs_int) type;
/* public */ - (NSString*) value;
+ (XS_JsonTickValue*) new;
/* private */ - (void) privateInit;
/* public */ + (XS_JsonTickValue*) of :(NSString*)param_value;
/* public */ - (NSString*) toString;
/* private */ + (XS_JsonTickValue*) DC1 :(NSString*)p1;
@end

@interface XS_JsonTokenStream : NSObject
{
    @private XS_CharStream* inputStream;
    @private XS_JsonToken* nextToken;
    @private XS_CharBuffer* buffer;
}
/* private */ - (id) init;
/* public */ + (XS_JsonTokenStream*) new;
/* public */ + (XS_JsonTokenStream*) fromStream :(XS_CharStream*)stream;
/* public */ + (XS_JsonTokenStream*) fromString :(NSString*)text;
/* public */ - (XS_JsonToken*) read;
/* public */ - (XS_JsonToken*) peek;
/* public */ - (xs_boolean) nextIs :(xs_int)type;
/* public */ - (xs_boolean) endArray;
/* public */ - (xs_boolean) endObject;
/* public */ - (void) undoRead :(XS_JsonToken*)token;
/* private */ - (void) badNumber :(XS_CharBuffer*)n :(xs_char)c;
/* private */ - (NSString*) badToken4 :(xs_char)c1 :(xs_char)c2 :(xs_char)c3 :(xs_char)c4;
/* private */ - (NSString*) badToken5 :(xs_char)c1 :(xs_char)c2 :(xs_char)c3 :(xs_char)c4 :(xs_char)c5;
/* private */ - (XS_JsonNumberValue*) readNumber :(xs_char)x;
/* private */ - (XS_JsonStringValue*) readString;
/* private */ + (xs_int) parseHex1 :(xs_char)c;
/* private */ + (xs_int) parseHex4 :(xs_char)c1 :(xs_char)c2 :(xs_char)c3 :(xs_char)c4;
/* private */ + (XS_JsonTokenStream*) DC1 :(XS_CharStream*)p1;
@end

#define XS_JsonTokenStream_END_STREAM ((xs_char)0xffff)

@interface XS_JsonOutputStream : NSObject
/* public */ + (XS_JsonOutputStream*) new;
/* public */ + (XS_JsonOutputStream*) withBuffer;
/* public */ - (void) clear;
/* public */ - (xs_int) length;
/* public */ - (NSString*) toString;
/* public */ - (void) writeChar :(xs_char)c;
/* public */ - (void) writeChars :(NSString*)s;
/* public */ - (void) writeString :(NSString*)s;
/* public */ - (void) writeValue :(id)v;
/* private */ - (void) writeChunk :(NSString*)s;
/* private */ - (void) writeHex1 :(xs_int)h;
/* private */ - (void) writeHex4 :(xs_int)h;
@end

/* internal */ @interface XS_JsonOutputStream1 : XS_JsonOutputStream
{
    @private XS_CharBuffer* buffer;
}
/* private */ - (id) init;
/* public */ + (XS_JsonOutputStream1*) new;
/* public */ - (void) clear;
/* public */ - (xs_int) length;
/* public */ - (NSString*) toString;
/* public */ - (void) writeChar :(xs_char)c;
/* public */ - (void) writeChars :(NSString*)s;
@end

/* internal */ @interface XS_JsonContentFrame : NSObject
{
    @private XS_JsonArray* theArray_;
    @private XS_JsonObject* theObject_;
}
/* public */ @property (strong) XS_JsonArray* theArray;
/* public */ @property (strong) XS_JsonObject* theObject;
/* private */ - (id) init;
/* public */ + (XS_JsonContentFrame*) new;
/* public */ - (XS_JsonArray*) theArray;
/* public */ - (void) setTheArray :(XS_JsonArray*)value;
/* public */ - (XS_JsonObject*) theObject;
/* public */ - (void) setTheObject :(XS_JsonObject*)value;
@end

/* internal */ @interface XS_JsonContentStack : XS_ListBase
+ (XS_JsonContentStack*) new;
/* public */ - (void) privateInit;
+ (XS_JsonContentStack*) new :(xs_int)capacity;
/* public */ - (void) privateInit :(xs_int)capacity;
/* public */ - (XS_JsonContentStack*) add :(XS_JsonContentFrame*)item;
/* public */ - (void) addAll :(XS_JsonContentStack*)other;
/* public */ - (XS_JsonContentFrame*) get :(xs_int)index;
/* public */ - (void) set :(xs_int)index :(XS_JsonContentFrame*)item;
/* public */ - (xs_boolean) has :(XS_JsonContentFrame*)item;
/* public */ - (xs_int) firstIndexOf :(XS_JsonContentFrame*)item;
/* public */ - (xs_int) lastIndexOf :(XS_JsonContentFrame*)item;
/* public */ - (void) insert :(xs_int)index :(XS_JsonContentFrame*)item;
/* public */ - (xs_boolean) remove :(XS_JsonContentFrame*)item;
/* public */ - (XS_JsonContentStack*) slice :(xs_int)start :(xs_int)end;
/* public */ + (XS_JsonContentStack*) share :(XS_ListBase*)list;
@end

@interface XS_JsonContentStream : NSObject
{
    @private XS_JsonTokenStream* tokenStream;
    @private XS_JsonContentStack* stack;
}
/* private */ - (id) init;
/* public */ + (XS_JsonContentStream*) new;
/* public */ + (XS_JsonContentStream*) fromStream :(XS_CharStream*)stream;
/* public */ + (XS_JsonContentStream*) fromString :(NSString*)text;
/* public */ + (XS_JsonContentStream*) fromTokens :(XS_JsonTokenStream*)tokens;
/* public */ - (xs_boolean) lookingAt :(xs_int)type;
/* public */ - (void) expectComma;
/* public */ - (void) expectColon;
/* public */ - (XS_JsonNumberValue*) expectNumber;
/* public */ - (XS_JsonStringValue*) expectString;
/* public */ - (XS_JsonArray*) beginArray;
/* public */ - (void) endArray;
/* public */ - (XS_JsonObject*) beginObject;
/* public */ - (void) endObject;
/* public */ - (XS_JsonObject*) readObject;
/* public */ - (NSString*) readString;
/* public */ - (id) readValue;
/* public */ - (xs_boolean) isEndArray;
/* public */ - (xs_boolean) isEndObject;
/* private */ - (XS_JsonContentFrame*) topStackFrame;
/* private */ - (XS_JsonContentFrame*) popStackFrame;
/* private */ + (XS_JsonContentFrame*) DC2 :(XS_JsonArray*)p1;
/* private */ + (XS_JsonContentFrame*) DC3 :(XS_JsonObject*)p1;
/* private */ + (XS_JsonContentStream*) DC1 :(XS_JsonTokenStream*)p1;
@end

@interface XS_JsonArray : XS_ListBase
/* public */ @property (readonly, strong) XS_DataType* dataType;
/* public */ - (NSString*) toString;
+ (XS_JsonArray*) new;
/* public */ - (void) privateInit;
+ (XS_JsonArray*) new :(xs_int)capacity;
/* public */ - (void) privateInit :(xs_int)capacity;
/* public */ - (XS_DataType*) dataType;
/* public */ - (XS_JsonArray*) add :(id)item;
/* public */ - (void) addAll :(XS_JsonArray*)other;
/* public */ - (id) get :(xs_int)index;
/* public */ - (void) set :(xs_int)index :(id)item;
/* public */ - (xs_boolean) has :(id)item;
/* public */ - (xs_int) firstIndexOf :(id)item;
/* public */ - (xs_int) lastIndexOf :(id)item;
/* public */ - (void) insert :(xs_int)index :(id)item;
/* public */ - (xs_boolean) remove :(id)item;
/* public */ - (XS_JsonArray*) slice :(xs_int)start :(xs_int)end;
/* public */ + (XS_JsonArray*) share :(XS_ListBase*)list;
@end

@interface XS_JsonObject : NSObject
{
    @public NSMutableDictionary* map;
}
/* public */ @property (readonly) xs_int count;
/* private */ - (id) init;
/* public */ + (XS_JsonObject*) new;
/* public */ - (NSString*) toString;
/* public */ - (XS_JsonArray*) getArray :(NSString*)name;
/* public */ - (XS_JsonObject*) getObject :(NSString*)name;
/* public */ - (NSString*) getString :(NSString*)name;
/* public */ - (NSString*) getNullableString :(NSString*)name;
/* public */ - (xs_nullable_int) getNullableInt :(NSString*)name;
/* public */ - (void) setArray :(NSString*)name :(XS_JsonArray*)value;
/* public */ - (void) setObject :(NSString*)name :(XS_JsonObject*)value;
/* public */ - (void) setString :(NSString*)name :(NSString*)value;
/* public */ - (void) setNullableString :(NSString*)name :(NSString*)value;
/* public */ - (xs_int) count;
/* public */ - (void) clear;
/* public */ - (id) get :(NSString*)key;
/* public */ - (void) set :(NSString*)key :(id)value;
/* public */ - (xs_boolean) has :(NSString*)key;
/* public */ - (xs_boolean) remove :(NSString*)key;
/* public */ - (XS_StringList*) keys;
/* public */ - (XS_ObjectList*) values;
@end

@interface XS_JsonValue : NSObject
/* private */ + (void) initialize;
/* public */ + (id) fromArray :(XS_JsonArray*)value;
/* public */ + (id) fromObject :(XS_JsonObject*)value;
/* public */ + (id) fromString :(NSString*)value;
/* public */ + (id) fromBinary :(NSData*)value;
/* public */ + (id) fromBoolean :(xs_boolean)value;
/* public */ + (id) fromChar :(xs_char)value;
/* public */ + (id) fromByte :(xs_byte)value;
/* public */ + (id) fromShort :(xs_short)value;
/* public */ + (id) fromInt :(xs_int)value;
/* public */ + (id) fromLong :(xs_long)value;
/* public */ + (id) fromInteger :(xs_integer)value;
/* public */ + (id) fromDecimal :(xs_decimal)value;
/* public */ + (id) fromFloat :(xs_float)value;
/* public */ + (id) fromDouble :(xs_double)value;
/* public */ + (id) fromNullableString :(NSString*)value;
/* public */ + (id) fromNullableBinary :(NSData*)value;
/* public */ + (id) fromNullableBoolean :(xs_nullable_boolean)value;
/* public */ + (id) fromNullableChar :(xs_nullable_char)value;
/* public */ + (id) fromNullableByte :(xs_nullable_byte)value;
/* public */ + (id) fromNullableShort :(xs_nullable_short)value;
/* public */ + (id) fromNullableInt :(xs_nullable_int)value;
/* public */ + (id) fromNullableLong :(xs_nullable_long)value;
/* public */ + (id) fromNullableInteger :(xs_nullable_integer)value;
/* public */ + (id) fromNullableDecimal :(xs_nullable_decimal)value;
/* public */ + (id) fromNullableFloat :(xs_nullable_float)value;
/* public */ + (id) fromNullableDouble :(xs_nullable_double)value;
/* public */ + (id) fromValue :(XS_DataValue*)value :(XS_DataContext*)context;
/* public */ + (XS_JsonArray*) fromValueList :(XS_DataValueList*)value :(XS_DataContext*)context;
/* public */ + (XS_JsonObject*) fromComplex :(XS_ComplexValue*)complex :(XS_DataContext*)context;
/* public */ + (XS_JsonArray*) fromComplexList :(XS_ComplexValueList*)value :(XS_DataContext*)context;
/* public */ + (XS_JsonObject*) fromEntity :(XS_EntityValue*)entity :(XS_DataContext*)context;
/* public */ + (XS_JsonObject*) fromEntityList :(XS_EntityValueList*)value :(XS_DataContext*)context;
/* public */ + (XS_JsonArray*) getArray :(id)value;
/* public */ + (XS_JsonObject*) getObject :(id)value;
/* public */ + (NSString*) getString :(id)value;
/* public */ + (NSData*) getBinary :(id)value;
/* public */ + (xs_boolean) getBoolean :(id)value;
/* public */ + (xs_char) getChar :(id)value;
/* public */ + (xs_byte) getByte :(id)value;
/* public */ + (xs_short) getShort :(id)value;
/* public */ + (xs_int) getInt :(id)value;
/* public */ + (xs_long) getLong :(id)value;
/* public */ + (xs_integer) getInteger :(id)value;
/* public */ + (xs_decimal) getDecimal :(id)value;
/* public */ + (xs_float) getFloat :(id)value;
/* public */ + (xs_double) getDouble :(id)value;
/* public */ + (NSString*) getNullableString :(id)value;
/* public */ + (NSData*) getNullableBinary :(id)value;
/* public */ + (xs_nullable_boolean) getNullableBoolean :(id)value;
/* public */ + (xs_nullable_char) getNullableChar :(id)value;
/* public */ + (xs_nullable_byte) getNullableByte :(id)value;
/* public */ + (xs_nullable_short) getNullableShort :(id)value;
/* public */ + (xs_nullable_int) getNullableInt :(id)value;
/* public */ + (xs_nullable_long) getNullableLong :(id)value;
/* public */ + (xs_nullable_integer) getNullableInteger :(id)value;
/* public */ + (xs_nullable_decimal) getNullableDecimal :(id)value;
/* public */ + (xs_nullable_float) getNullableFloat :(id)value;
/* public */ + (xs_nullable_double) getNullableDouble :(id)value;
/* public */ + (XS_DataValue*) getValue :(id)value :(XS_DataType*)type :(XS_DataContext*)context;
/* public */ + (XS_DataValueList*) getValueList :(id)value :(XS_DataType*)type :(XS_DataContext*)context;
/* public */ + (XS_ComplexValue*) getComplex :(id)value :(XS_ComplexType*)type :(XS_DataContext*)context;
/* public */ + (XS_ComplexValueList*) getComplexList :(id)value :(XS_DataType*)type :(XS_DataContext*)context;
/* public */ + (XS_EntityValue*) getEntity :(id)value :(XS_EntityType*)type :(XS_DataContext*)context;
/* public */ + (XS_EntityValueList*) getEntityList :(id)value :(XS_DataType*)type :(XS_DataContext*)context;
/* public */ + (XS_DataValue*) parseDocument :(id)document :(XS_DataType*)type :(XS_DataContext*)context;
/* public */ + (XS_DeferredValue*) parseLink :(id)document :(XS_EntityType*)type :(XS_DataContext*)context;
/* public */ + (XS_ObjectList*) parseLinks :(id)document :(XS_EntityType*)type :(XS_DataContext*)context;
/* public */ + (XS_JsonObject*) formatLink :(XS_EntityValue*)entity :(XS_DataContext*)context;
/* public */ + (XS_JsonObject*) formatCall :(XS_MethodCall*)call :(XS_DataContext*)context;
/* public */ + (XS_ErrorResponse*) errorResponse :(id)document :(XS_DataContext*)context;
/* private */ + (void) deepInsert :(XS_JsonObject*)jo :(XS_PropertyInfo*)pi :(XS_DataValue*)dv :(XS_DataContext*)context;
/* private */ + (id) unwrapDocument :(id)document :(XS_DataContext*)context;
/* private */ + (XS_JsonBooleanValue*) getJsonBoolean :(id)value;
/* private */ + (XS_JsonNumberValue*) getJsonNumber :(id)value;
/* private */ + (XS_JsonStringValue*) getJsonString :(id)value;
/* private */ + (NSString*) getNumberText :(id)value;
/* private */ + (NSString*) actualTypeName :(XS_JsonObject*)value :(XS_DataContext*)context;
/* private */ + (XS_ComplexType*) actualComplexType :(XS_JsonObject*)complex :(XS_ComplexType*)formalType :(XS_DataContext*)context;
/* private */ + (XS_EntityType*) actualEntityType :(XS_JsonObject*)entity :(XS_EntityType*)formalType :(XS_DataContext*)context;
/* private */ + (XS_DataType*) resolveOpenType :(NSString*)type :(XS_DataContext*)context;
/* private */ + (XS_LocalDateTime*) parseLocalDT :(NSString*)s;
/* private */ + (XS_LocalDateTime*) parseTicksLDT :(NSString*)s;
/* private */ + (XS_GlobalDateTime*) parseTicksGDT :(NSString*)s;
/* private */ + (XS_LocalDateTime*) LDT_1970;
/* private */ + (XS_GlobalDateTime*) GDT_1970;
/* private */ + (XS_StreamLink*) DC1 :(NSString*)p1 :(NSString*)p2;
@end

#define XS_JsonValue_LDT_1970 [XS_LocalDateTime parse:@"1970-01-01T00:00:00"]
#define XS_JsonValue_GDT_1970 [XS_GlobalDateTime parse:@"1970-01-01T00:00:00Z"]
#define XS_JsonValue_AT_ODATA_BIND @"@odata.bind"
#define XS_JsonValue_AT_ODATA_CONTEXT @"@odata.context"
#define XS_JsonValue_AT_ODATA_COUNT @"@odata.count"
#define XS_JsonValue_AT_ODATA_DELTA_LINK @"@odata.deltaLink"
#define XS_JsonValue_AT_ODATA_EDIT_LINK @"@odata.editLink"
#define XS_JsonValue_AT_ODATA_ETAG @"@odata.etag"
#define XS_JsonValue_AT_ODATA_ID @"@odata.id"
#define XS_JsonValue_AT_ODATA_MEDIA_ETAG @"@odata.mediaETag"
#define XS_JsonValue_AT_ODATA_MEDIA_TYPE @"@odata.mediaContentType"
#define XS_JsonValue_AT_ODATA_NEXT_LINK @"@odata.nextLink"
#define XS_JsonValue_AT_ODATA_READ_LINK @"@odata.readLink"
#define XS_JsonValue_AT_ODATA_TYPE @"@odata.type"
#define XS_JsonValue_V3_COUNT @"__count"
#define XS_JsonValue_V3_DELTA @"__delta"
#define XS_JsonValue_V3_METADATA @"__metadata"
#define XS_JsonValue_V3_NEXT @"__next"
#define XS_JsonValue_V3_READ @"__read"

@interface XS_JsonDeltaStream : XS_DeltaStream
{
    @private XS_DataContext* dataContext;
    @private XS_CharStream* charStream;
    @private XS_JsonContentStream* jsonStream;
    @private xs_boolean firstItem;
}
/* private */ - (id) init;
+ (XS_JsonDeltaStream*) new;
/* private */ - (void) privateInit;
/* public */ + (XS_JsonDeltaStream*) fromStream :(XS_CharStream*)stream :(XS_DataContext*)context;
/* public */ - (void) abort;
/* public */ - (void) close;
/* public */ - (xs_boolean) next;
/* public */ + (id) parseItem :(XS_JsonObject*)item :(XS_DataContext*)context;
/* private */ + (XS_JsonDeltaStream*) DC1 :(XS_CharStream*)p1 :(XS_DataContext*)p2 :(xs_boolean)p3 :(XS_JsonContentStream*)p4;
@end

@interface XS_JsonWriter : NSObject
/* public */ + (NSString*) write :(id)value;
@end

@interface XS_JsonReader : NSObject
/* public */ + (id) read :(NSString*)text;
@end

@interface XS_GeoJSON : NSObject
/* public */ + (XS_DataValue*) parse :(NSString*)text :(XS_DataType*)type;
/* public */ + (XS_DataValue*) parseObject :(XS_JsonObject*)geo :(XS_DataType*)type;
/* public */ + (NSString*) format :(XS_DataValue*)value;
/* public */ + (XS_JsonObject*) formatObject :(XS_DataValue*)value;
/* private */ + (XS_GeographyValue*) parseGeography :(XS_JsonObject*)geo :(xs_int)tc :(XS_GeographyValue*)gv;
/* private */ + (XS_GeometryValue*) parseGeometry :(XS_JsonObject*)geo :(xs_int)tc :(XS_GeometryValue*)gv;
/* private */ + (xs_int) parseSRID :(XS_JsonObject*)geo :(xs_int)defaultSRID;
/* private */ + (XS_PointCoordinates*) parsePoint :(XS_JsonArray*)array;
/* private */ + (XS_MultiPointCoordinates*) parseMultiPoint :(XS_JsonArray*)array;
/* private */ + (XS_CurveCoordinates*) parseLineString :(XS_JsonArray*)array;
/* private */ + (XS_MultiCurveCoordinates*) parseMultiLineString :(XS_JsonArray*)array;
/* private */ + (XS_PolygonCoordinates*) parsePolygon :(XS_JsonArray*)array;
/* private */ + (XS_MultiPolygonCoordinates*) parseMultiPolygon :(XS_JsonArray*)array;
/* private */ + (void) formatSRID :(XS_JsonObject*)geo :(xs_int)srid :(xs_int)defaultSRID;
/* private */ + (XS_JsonArray*) formatPoint :(XS_PointCoordinates*)value;
/* private */ + (XS_JsonArray*) formatMultiPoint :(XS_MultiPointCoordinates*)value;
/* private */ + (XS_JsonArray*) formatLineString :(XS_CurveCoordinates*)value;
/* private */ + (XS_JsonArray*) formatMultiLineString :(XS_MultiCurveCoordinates*)value;
/* private */ + (XS_JsonArray*) formatPolygon :(XS_PolygonCoordinates*)value;
/* private */ + (XS_JsonArray*) formatMultiPolygon :(XS_MultiPolygonCoordinates*)value;
@end

#endif
